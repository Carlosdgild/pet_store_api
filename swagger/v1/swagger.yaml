---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/pets":
    get:
      summary: Get pets
      tags:
      - Pets
      parameters:
      - name: page
        in: query
        required: false
        example: 2
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        example: 2
        schema:
          type: integer
      responses:
        '200':
          description: Gets a list of pets
          content:
            application/json:
              example:
                data:
                - id: 17
                  name: pet_test_17
                  tag: pet_tag_17
                - id: 18
                  name: pet_test_18
                  tag: pet_tag_18
                meta:
                  total_pages: 5
                  page_number: 2
                  max_per_page: 2
                  total_resources: 10
    post:
      summary: Create pet
      tags:
      - Pets
      parameters: []
      responses:
        '200':
          description: Creates a single pet
          content:
            application/json:
              example:
                data:
                  id: 1
                  name: my pet
                  tag: dog
                meta: 
        '422':
          description: Invalid parameters
          content:
            application/json:
              example:
                message: Could not create record
                code: 9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pet:
                  type: object
                  properties:
                    name:
                      type: string
                      example: my pet
                    tag:
                      type: string
                      example: dog
                  required:
                  - name
              required:
              - pet
  "/api/v1/pets/{pet_id}":
    get:
      summary: Get pet
      tags:
      - Pets
      parameters:
      - name: pet_id
        in: path
        required: true
        example: '1'
        schema:
          type: string
      responses:
        '200':
          description: Gets a single pet
          content:
            application/json:
              example:
                data:
                  id: 17
                  name: pet_test_17
                  tag: pet_tag_17
                meta: 
        '404':
          description: Resource not found
          content:
            application/json:
              example:
                message: Could not find resource
                code: 4
components:
  securitySchemes: {}
  schemas:
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
      required:
      - id
      - name
    Pets:
      type: array
      items:
        "$ref": "#/components/schemas/Pet"
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
      - code
      - message
servers:
- url: http://{localHost}
  variables:
    localHost:
      default: localhost:3000
